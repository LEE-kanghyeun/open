import gym
import pandas as pd
import random
from collections import defaultdict
from tqdm import tqdm


############# monte carlo  <Contoral - On Policy> ############

def epsilon_greedy_policy(state, Q):
    epsilon = 0.5   ## Random action으로 선택될 확률
    if random.uniform(0, 1) < epsilon:
        return env.action_space.sample() ##  Random action
    else:           ## Greedy
        # print(Q)
        a = max(list(range(env.action_space.n)), key=lambda x: Q[(state, x)]) # update된 policy(Q 테이블)에서 가장 좋은 액션을 선택
        ## x는 action을 의미함,    action_space에 존재하는 action 중에서 Q[(state, x)]의 최대값을 만족하는 x를 리턴
        # print(Q)  # 출력 -> defaultdict(<class 'float'>, {((19, 6, False), 0): 0.0, ((20, 9, False), 0): 0.9565217391304348, ((20, 9, False), 1): -1.0, ((19, 8, False), 0): 0.75, ((17, 10, False), 1): -0.7222222222222222, ((16, 10, True), 0): 0.0, ((20, 6, False), 0): 0.7058823529411765, ((20, 6, False), 1): -0.2, ((16, 7, True), 0): 0.0, ((16, 3, False), 1): -0.75, ((19, 3, False), 0): 0.3333333333333333, ((20, 1, False), 1): -0.5, ((5, 10, False), 0): -0.42857142857142855, ((5, 10, False), 1): -1.0, ((21, 10, True), 0): 0.8421052631578947, ((16, 3, False), 0): 0.2, ((19, 10, False), 0): 0.038461538461538464, ((19, 10, False), 1): -1.0, ((16, 8, True), 0): 0.0, ((17, 10, False), 0): -0.5952380952380952, ((20, 10, False), 0): 0.47560975609756095, ((20, 10, False), 1): -1.0, ((15, 10, False), 1): -0.4722222222222222, ((14, 4, False), 0): 0.2727272727272727, ((14, 4, False), 1): -0.6, ((18, 1, False), 0): -0.23076923076923078, ((18, 1, False), 1): -1.0, ((21, 5, False), 0): 0.42857142857142855, ((21, 5, False), 1): -1.0, ((16, 5, False), 1): -0.3333333333333333, ((14, 6, False), 0): -0.3333333333333333, ((13, 2, True), 0): 0.3333333333333333, ((13, 2, True), 1): 0.0, ((14, 10, False), 0): -0.45098039215686275, ((17, 1, False), 0): -0.5, ((17, 1, False), 1): -1.0, ((11, 10, False), 1): -0.4166666666666667, ((18, 10, False), 1): -0.7142857142857143, ((13, 9, False), 0): -0.38461538461538464, ((13, 9, False), 1): -1.0, ((19, 6, False), 1): -1.0, ((18, 4, False), 0): 0.25, ((18, 4, False), 1): -1.0, ((15, 3, False), 0): -0.09090909090909091, ((15, 3, False), 1): -1.0, ((8, 3, False), 1): -1.0, ((14, 8, False), 1): -0.6, ((12, 10, False), 0): -0.65, ((12, 10, False), 1): -0.4594594594594595, ((11, 7, False), 0): -0.3333333333333333, ((11, 7, False), 1): -1.0, ((12, 2, False), 0): -0.5555555555555556, ((12, 2, False), 1): -0.42857142857142855, ((17, 6, True), 0): -1.0, ((17, 6, True), 1): 0.0, ((6, 10, False), 0): -0.2727272727272727, ((20, 4, True), 0): 1.0, ((20, 4, True), 1): 0.0, ((15, 2, False), 1): -0.2, ((16, 7, False), 0): -0.5, ((21, 1, True), 0): 1.0, ((21, 1, True), 1): -1.0, ((18, 5, False), 0): 0.2, ((18, 5, False), 1): -1.0, ((18, 9, False), 0): -0.3333333333333333, ((13, 10, False), 0): -0.4782608695652174, ((13, 10, False), 1): -0.5416666666666666, ((18, 2, False), 1): -0.3333333333333333, ((17, 2, False), 0): -0.25, ((17, 2, False), 1): -1.0, ((14, 10, False), 1): -0.7058823529411765, ((19, 7, True), 0): 0.5, ((6, 10, False), 1): -1.0, ((11, 10, False), 0): -0.5238095238095238, ((16, 3, True), 0): 0.3333333333333333, ((16, 3, True), 1): -1.0, ((9, 10, False), 0): -0.5238095238095238, ((9, 10, False), 1): -0.5, ((5, 4, False), 0): -0.3333333333333333, ((5, 4, False), 1): -1.0, ((17, 7, False), 0): -0.1, ((17, 7, False), 1): -1.0, ((15, 7, False), 1): -1.0, ((16, 10, False), 0): -0.25, ((16, 10, False), 1): -0.7368421052631579, ((19, 10, True), 0): -0.1111111111111111, ((21, 8, False), 0): 1.0, ((21, 8, False), 1): -1.0, ((17, 8, False), 1): -0.5, ((20, 3, False), 0): 0.5454545454545454, ((20, 3, False), 1): -1.0, ((13, 4, False), 0): 0.0, ((13, 4, False), 1): -1.0, ((20, 8, False), 0): 0.6111111111111112, ((20, 8, False), 1): -1.0, ((15, 8, False), 1): -0.6666666666666666, ((18, 8, False), 1): -0.09090909090909091, ((15, 1, False), 0): -0.42857142857142855, ((10, 10, False), 0): -0.2, ((10, 10, False), 1): -0.047619047619047616, ((19, 2, False), 1): -1.0, ((15, 8, False), 0): -0.5, ((11, 5, False), 0): 0.0, ((11, 5, False), 1): 0.2, ((14, 1, True), 0): -1.0, ((14, 1, True), 1): -1.0, ((12, 8, False), 0): -1.0, ((12, 8, False), 1): -0.5833333333333334, ((14, 8, False), 0): -0.3333333333333333, ((18, 10, False), 0): -0.1282051282051282, ((21, 6, True), 0): 1.0, ((21, 6, True), 1): 1.0, ((7, 7, False), 1): -0.5, ((18, 6, False), 0): 0.6363636363636364, ((18, 6, False), 1): -0.6666666666666666, ((10, 4, False), 0): 1.0, ((10, 4, False), 1): 0.0, ((14, 6, False), 1): -0.6666666666666666, ((20, 5, False), 0): 0.8571428571428571, ((20, 5, False), 1): -1.0, ((21, 10, True), 1): -0.4, ((14, 2, False), 0): 0.0, ((14, 2, False), 1): 0.14285714285714285, ((13, 2, False), 1): 0.2, ((8, 10, False), 0): -0.5555555555555556, ((8, 10, False), 1): -0.35714285714285715, ((13, 4, True), 0): -1.0, ((18, 3, False), 0): -0.4, ((18, 3, False), 1): 0.0, ((13, 7, True), 0): -1.0, ((14, 10, True), 0): -0.3333333333333333, ((14, 10, True), 1): -1.0, ((14, 3, False), 0): -0.25, ((13, 8, False), 0): -1.0, ((12, 7, False), 0): -1.0, ((12, 7, False), 1): -0.6666666666666666, ((12, 6, False), 0): -0.3, ((12, 6, False), 1): -1.0, ((15, 4, False), 0): -0.3684210526315789, ((18, 7, False), 1): -0.5, ((21, 9, True), 0): 1.0, ((21, 9, True), 1): -1.0, ((18, 9, False), 1): -1.0, ((16, 2, False), 0): 0.2727272727272727, ((16, 2, False), 1): -1.0, ((14, 3, False), 1): -0.23076923076923078, ((16, 1, True), 0): -1.0, ((16, 1, True), 1): -0.3333333333333333, ((21, 3, False), 1): -1.0, ((20, 10, True), 1): -0.14285714285714285, ((7, 10, False), 1): -0.4166666666666667, ((16, 8, False), 1): -0.7777777777777778, ((5, 9, False), 1): -1.0, ((10, 9, False), 1): -1.0, ((12, 4, False), 1): -0.3333333333333333, ((15, 5, False), 0): -0.16666666666666666, ((15, 5, False), 1): -0.25, ((7, 3, False), 1): -1.0, ((20, 4, False), 1): -1.0, ((15, 7, False), 0): -0.8333333333333334, ((21, 3, True), 0): 1.0, ((19, 7, True), 1): 0.0, ((19, 2, False), 0): 0.875, ((17, 2, True), 0): 0.5, ((17, 2, True), 1): 0.0, ((15, 10, False), 0): -0.4482758620689655, ((12, 4, False), 0): -0.6363636363636364, ((13, 7, False), 0): -0.42857142857142855, ((16, 1, False), 0): -1.0, ((14, 5, False), 1): -0.4, ((12, 1, False), 0): -0.8, ((12, 1, False), 1): -1.0, ((9, 1, False), 1): -1.0, ((15, 9, False), 1): -1.0, ((21, 6, False), 0): 1.0, ((21, 6, False), 1): 0.0, ((21, 8, True), 0): 1.0, ((7, 10, False), 0): -0.3333333333333333, ((19, 8, False), 1): -0.625, ((19, 5, False), 0): 0.45454545454545453, ((7, 4, False), 0): 0.5, ((7, 4, False), 1): 0.0, ((15, 6, False), 0): 0.16666666666666666, ((13, 5, False), 0): -0.2, ((13, 5, False), 1): -1.0, ((13, 7, False), 1): -1.0, ((19, 5, True), 0): 0.8, ((19, 5, True), 1): 1.0, ((15, 10, True), 0): -1.0, ((15, 10, True), 1): -0.375, ((13, 6, False), 1): -0.3333333333333333, ((9, 2, False), 0): 0.5, ((9, 2, False), 1): -1.0, ((16, 1, False), 1): -0.6, ((15, 4, False), 1): -0.7142857142857143, ((14, 7, True), 0): -1.0, ((11, 6, False), 0): 0.6, ((11, 6, False), 1): 0.0, ((19, 3, True), 1): -1.0, ((12, 3, False), 0): -0.6666666666666666, ((10, 5, False), 0): 0.0, ((10, 5, False), 1): 1.0, ((20, 7, False), 0): 0.8125, ((20, 7, False), 1): -1.0, ((21, 10, False), 1): -1.0, ((15, 9, False), 0): -0.3333333333333333, ((11, 1, False), 0): -0.2, ((11, 1, False), 1): 0.0, ((16, 5, False), 0): 0.125, ((13, 5, True), 0): -1.0, ((13, 5, True), 1): 1.0, ((17, 10, True), 1): -0.6666666666666666, ((15, 2, False), 0): 0.4666666666666667, ((16, 8, False), 0): -0.6, ((11, 4, False), 0): -1.0, ((11, 4, False), 1): 0.0, ((19, 9, False), 1): -1.0, ((11, 8, False), 0): -0.3333333333333333, ((11, 8, False), 1): 0.3333333333333333, ((8, 8, False), 0): -1.0, ((8, 8, False), 1): -0.6, ((13, 8, False), 1): 0.0, ((16, 6, True), 1): -1.0, ((19, 3, False), 1): -1.0, ((9, 1, False), 0): -0.7142857142857143, ((18, 8, False), 0): -0.2, ((21, 10, False), 0): 0.9333333333333333, ((6, 3, False), 0): 0.0, ((6, 3, False), 1): -1.0, ((16, 5, True), 0): -1.0, ((12, 8, True), 0): -1.0, ((6, 7, False), 0): 1.0, ((6, 7, False), 1): 0.0, ((10, 7, False), 0): -0.3333333333333333, ((10, 7, False), 1): -1.0, ((8, 5, False), 1): 0.5, ((19, 4, True), 1): -1.0, ((19, 4, False), 1): -1.0, ((7, 7, False), 0): -1.0, ((18, 10, True), 0): -0.375, ((18, 10, True), 1): 0.0, ((14, 7, False), 0): -0.6, ((14, 7, False), 1): -0.3333333333333333, ((9, 5, False), 0): -1.0, ((9, 4, False), 0): -1.0, ((17, 9, False), 1): -0.6666666666666666, ((10, 6, False), 0): -0.6666666666666666, ((10, 6, False), 1): -1.0, ((20, 2, False), 0): 0.7083333333333334, ((20, 2, False), 1): -0.5, ((17, 4, False), 0): 0.14285714285714285, ((17, 4, False), 1): -1.0, ((20, 7, True), 0): 1.0, ((20, 7, True), 1): 0.0, ((20, 1, False), 0): 0.4375, ((15, 1, False), 1): -0.5, ((19, 7, False), 1): -1.0, ((8, 4, False), 0): -0.2, ((16, 9, True), 1): -1.0, ((16, 9, False), 0): -1.0, ((5, 5, False), 0): 0.0, ((19, 9, False), 0): -0.1111111111111111, ((14, 1, False), 0): -0.8181818181818182, ((14, 1, False), 1): -1.0, ((13, 10, True), 0): 0.0, ((13, 10, True), 1): -1.0, ((6, 9, False), 0): -1.0, ((6, 9, False), 1): -1.0, ((16, 5, True), 1): 0.0, ((14, 2, True), 0): -1.0, ((11, 9, False), 0): -1.0, ((9, 8, False), 1): 0.0, ((15, 6, False), 1): -1.0, ((11, 2, False), 0): 0.0, ((11, 2, False), 1): 0.0, ((17, 10, True), 0): -1.0, ((9, 3, False), 0): -0.14285714285714285, ((19, 5, False), 1): 0.0, ((12, 9, False), 1): -0.375, ((6, 1, False), 0): -1.0, ((6, 1, False), 1): -0.3333333333333333, ((12, 7, True), 0): 0.0, ((16, 6, False), 1): -1.0, ((20, 4, False), 0): 0.4090909090909091, ((13, 6, False), 0): 0.2, ((14, 8, True), 0): 0.0, ((20, 10, True), 0): 1.0, ((10, 8, False), 0): -0.14285714285714285, ((14, 2, True), 1): 1.0, ((21, 2, True), 1): 0.3333333333333333, ((14, 9, False), 0): -1.0, ((14, 9, False), 1): -0.3333333333333333, ((21, 2, False), 0): 0.8181818181818182, ((20, 5, True), 0): 1.0, ((20, 5, True), 1): 0.0, ((11, 3, False), 0): -0.6, ((11, 3, False), 1): -1.0, ((6, 4, False), 0): -1.0, ((6, 4, False), 1): 0.3333333333333333, ((12, 10, True), 0): -0.5, ((12, 10, True), 1): -1.0, ((13, 2, False), 0): -0.5555555555555556, ((8, 5, False), 0): -0.3333333333333333, ((9, 3, False), 1): -1.0, ((19, 4, True), 0): 1.0, ((9, 4, False), 1): -0.5, ((19, 4, False), 0): 0.6363636363636364, ((19, 9, True), 0): 1.0, ((15, 3, True), 0): -1.0, ((15, 3, True), 1): 0.0, ((9, 8, False), 0): 0.0, ((14, 5, False), 0): -0.3333333333333333, ((13, 7, True), 1): -1.0, ((20, 3, True), 0): 1.0, ((21, 2, False), 1): -1.0, ((17, 9, False), 0): -0.25, ((12, 3, False), 1): -1.0, ((13, 6, True), 0): 0.0, ((13, 1, False), 0): -0.6, ((13, 1, False), 1): -0.6666666666666666, ((12, 5, False), 0): -0.16666666666666666, ((21, 5, True), 0): 1.0, ((21, 5, True), 1): -0.75, ((18, 2, False), 0): -0.1111111111111111, ((15, 2, True), 1): 0.0, ((18, 2, True), 1): -1.0, ((7, 8, False), 0): -1.0, ((7, 8, False), 1): -1.0, ((16, 7, False), 1): 0.0, ((18, 7, False), 0): 0.5, ((10, 8, False), 1): -1.0, ((19, 8, True), 0): 1.0, ((19, 8, True), 1): 0.0, ((17, 7, True), 0): 0.1111111111111111, ((17, 7, True), 1): -1.0, ((10, 2, False), 0): -1.0, ((10, 2, False), 1): 0.5, ((17, 5, True), 0): -1.0, ((7, 9, False), 0): -1.0, ((16, 10, True), 1): 0.42857142857142855, ((7, 3, False), 0): -1.0, ((20, 6, True), 0): 0.6666666666666666, ((20, 6, True), 1): 0.0, ((19, 6, True), 1): 0.5, ((12, 9, False), 0): -0.25, ((17, 3, False), 0): 0.2857142857142857, ((17, 3, False), 1): 0.0, ((9, 9, False), 1): -1.0, ((17, 8, False), 0): -0.4444444444444444, ((7, 2, False), 0): 0.0, ((7, 2, False), 1): -1.0, ((13, 3, False), 0): -0.2, ((13, 3, False), 1): -1.0, ((19, 3, True), 0): 0.5, ((9, 6, False), 0): -1.0, ((9, 6, False), 1): 0.5, ((12, 5, False), 1): -1.0, ((15, 2, True), 0): 1.0, ((15, 9, True), 0): -1.0, ((15, 9, True), 1): 0.0, ((9, 5, False), 1): -0.2, ((10, 9, False), 0): -1.0, ((20, 9, True), 0): 1.0, ((20, 9, True), 1): 1.0, ((14, 9, True), 1): 0.3333333333333333, ((21, 1, False), 1): -1.0, ((19, 10, True), 1): -1.0, ((17, 6, False), 1): -1.0, ((18, 5, True), 0): 1.0, ((18, 5, True), 1): 0.0, ((21, 3, True), 1): -0.3333333333333333, ((21, 7, True), 0): 1.0, ((17, 6, False), 0): -0.6666666666666666, ((15, 8, True), 0): -1.0, ((15, 8, True), 1): 0.0, ((21, 4, True), 0): 1.0, ((21, 4, True), 1): -1.0, ((6, 6, False), 0): -1.0, ((6, 6, False), 1): -1.0, ((11, 9, False), 1): -0.2857142857142857, ((21, 9, False), 1): -1.0, ((19, 1, False), 0): 0.4, ((19, 1, False), 1): -1.0, ((18, 3, True), 0): 1.0, ((18, 3, True), 1): -1.0, ((14, 9, True), 0): 0.0, ((17, 9, True), 0): -1.0, ((16, 4, False), 0): 0.2, ((21, 7, False), 0): 1.0, ((21, 7, False), 1): -1.0, ((18, 1, True), 0): -1.0, ((18, 1, True), 1): 0.0, ((16, 9, True), 0): -1.0, ((13, 9, True), 1): -1.0, ((21, 8, True), 1): -1.0, ((21, 7, True), 1): 0.0, ((18, 7, True), 1): 0.2, ((8, 2, False), 0): 0.0, ((8, 2, False), 1): 0.0, ((5, 3, False), 0): -1.0, ((5, 3, False), 1): -1.0, ((16, 4, False), 1): -1.0, ((9, 7, False), 1): 0.0, ((19, 7, False), 0): 0.375, ((21, 2, True), 0): 1.0, ((18, 8, True), 0): -1.0, ((7, 5, False), 0): -0.5, ((16, 6, False), 0): 0.0, ((21, 3, False), 0): 1.0, ((17, 3, True), 1): 0.0, ((13, 3, True), 0): 1.0, ((13, 3, True), 1): 0.0, ((9, 9, False), 0): -0.2, ((5, 7, False), 1): -1.0, ((8, 6, False), 0): -0.5, ((8, 6, False), 1): -1.0, ((17, 4, True), 0): 0.0, ((17, 4, True), 1): 0.0, ((8, 7, False), 0): -0.3333333333333333, ((8, 7, False), 1): -0.3333333333333333, ((10, 3, False), 0): 0.0, ((10, 3, False), 1): 0.0, ((21, 9, False), 0): 0.8333333333333334, ((10, 1, False), 1): 0.0, ((6, 5, False), 0): 0.0, ((6, 5, False), 1): -1.0, ((5, 9, False), 0): -1.0, ((20, 1, True), 1): -1.0, ((18, 7, True), 0): 0.0, ((7, 1, False), 0): -1.0, ((17, 3, True), 0): 0.0, ((18, 4, True), 0): 0.3333333333333333, ((19, 2, True), 1): -1.0, ((8, 1, False), 0): 0.0, ((8, 9, False), 0): -1.0, ((8, 9, False), 1): 0.0, ((18, 4, True), 1): 0.0, ((13, 1, True), 0): 1.0, ((5, 2, False), 0): -1.0, ((5, 2, False), 1): 0.0, ((18, 9, True), 0): 1.0, ((18, 9, True), 1): 0.0, ((7, 5, False), 1): -0.2, ((13, 6, True), 1): -1.0, ((14, 6, True), 0): -1.0, ((14, 6, True), 1): -1.0, ((12, 6, True), 0): 1.0, ((12, 6, True), 1): 0.0, ((7, 6, False), 1): 0.0, ((20, 2, True), 0): 0.5, ((20, 2, True), 1): 1.0, ((5, 1, False), 0): -1.0, ((16, 9, False), 1): 1.0, ((8, 1, False), 1): -1.0, ((19, 1, True), 1): -1.0, ((4, 10, False), 0): -1.0, ((14, 4, True), 0): 0.3333333333333333, ((14, 4, True), 1): 1.0, ((14, 3, True), 1): -1.0, ((21, 1, False), 0): 1.0, ((12, 9, True), 0): -1.0, ((12, 9, True), 1): 0.0, ((15, 1, True), 1): -0.3333333333333333, ((17, 1, True), 1): -1.0, ((17, 1, True), 0): -1.0, ((8, 4, False), 1): -1.0, ((8, 3, False), 0): -1.0, ((5, 6, False), 1): -1.0, ((7, 6, False), 0): 1.0, ((15, 6, True), 0): 0.0, ((15, 6, True), 1): 0.0, ((14, 7, True), 1): -0.3333333333333333, ((15, 7, True), 1): 0.0, ((5, 6, False), 0): -1.0, ((17, 5, True), 1): 1.0, ((5, 8, False), 1): 1.0, ((17, 5, False), 0): -1.0, ((17, 5, False), 1): -0.5, ((6, 2, False), 1): 1.0, ((6, 8, False), 0): 0.0, ((6, 8, False), 1): -1.0, ((16, 4, True), 0): -1.0, ((16, 4, True), 1): -1.0, ((14, 5, True), 0): -1.0, ((12, 2, True), 0): -1.0, ((19, 9, True), 1): -1.0, ((9, 7, False), 0): 1.0, ((10, 1, False), 0): -1.0, ((4, 8, False), 0): -1.0, ((4, 8, False), 1): -1.0, ((14, 3, True), 0): 1.0, ((21, 4, False), 0): 1.0, ((21, 4, False), 1): 0.0, ((15, 7, True), 0): 0.0, ((14, 8, True), 1): 0.0, ((6, 2, False), 0): 0.0, ((4, 10, False), 1): -1.0, ((19, 1, True), 0): 1.0, ((15, 5, True), 0): -1.0, ((15, 5, True), 1): 0.0, ((19, 6, True), 0): 0.0, ((4, 9, False), 0): -1.0, ((17, 8, True), 0): -1.0, ((17, 8, True), 1): 0.0, ((18, 6, True), 1): -1.0, ((15, 1, True), 0): -1.0, ((16, 7, True), 1): 0.0, ((16, 2, True), 1): -1.0, ((5, 7, False), 0): -1.0, ((19, 2, True), 0): -1.0, ((5, 5, False), 1): 0.0, ((18, 8, True), 1): 1.0, ((13, 8, True), 1): 1.0, ((5, 1, False), 1): -1.0, ((18, 2, True), 0): -1.0}) 2262 번쨰 for문
        return a


def greedy_policy(state, Q):
    return max(list(range(env.action_space.n)), key = lambda x: Q[(state, x)])

def generate_episode(Q):
    episode = []
    state = env.reset()  # 초기화하고, 랜덤하게 초기 state 발생시킴
    state = state[0]
    # print(state, "#####") # 출력 : (5, 9, False) ##### or (15, 1, False) ##### or ~~
    for t in range(num_timesteps):
        action = epsilon_greedy_policy(state, Q) # action이 epsilon+greedy하게 선택됨(epsilon에 따라 action이 조금씩 변하게됨)
        # print(t, Q)
        next_state, reward,  done, terminated, info = env.step(action)
        episode.append((state, action, reward))
        if done:
            break
        state = next_state
    return episode

def evaluate_policy(Q=None):
    num_episodes = 1000
    num_wins = 0
    num_draws = 0
    num_losses = 0
    num_total = 0
    for i in tqdm(range(num_episodes)):
        state = env.reset()
        state = state[0]
        for t in range(num_timesteps):
            if Q is None:
                action = env.action_space.sample()
            else:
                action = greedy_policy(state, Q)
            next_state, reward,  done, terminated , info = env.step(action)
            if done:
                if reward == 1:  # reward에 따라 승/무/패 저장해놓기
                    num_wins += 1
                elif reward == 0:
                    num_draws += 1
                elif reward == -1:
                    num_losses += 1
                num_total += 1
                break
            state = next_state

    print("wins: %d (%.2f%%), draws: %d (%.2f%%), losses: %d (%.2f%%)"%(num_wins, num_wins/num_total*100, num_draws, num_draws/num_total*100, num_losses, num_losses/num_total*100))



env = gym.make('Blackjack-v1')
Q = defaultdict(float)
total_return = defaultdict(float)
N = defaultdict(int)
num_timesteps = 100

num_iterations = 5000  ## epidode를 만들어 낼  총 횟수
for i in tqdm(range(num_iterations)):
    episode = generate_episode(Q)  # update된 policy를 입력하여 episode 생성(최초에는 랜덤 policy 생성) , 이때 episode에서 취하는 action은 꼭 max-action이 아닌, epsilon_greedy하게 선택됨.
    # print('episode:', episode)   # 출력 -> episode: [((9, 10, False), 1, 0.0), ((17, 10, False), 1, 0.0), ((18, 10, False), 0, -1.0)]
    all_state_action_pairs = [(s,a) for (s,a,r) in episode]
    rewards = [r for (s,a,r) in episode]
    for t, (state, action, _) in enumerate(episode):  # 해당 episode를 이용하여, Q 테이블을 구함.-> episode를 통해 update된 Q테이블 탄생
        # if not (state, action) in all_state_action_pairs[0:t]:   # first-visit 방식  (state, action)이 처음으로 나타났을때만, 적용
        R = sum(rewards[t:])  # t번쨰 step부터 종료시점까지의 reward 합산 => V(s) 계산을 위한 리턴값에 활용
        total_return[(state,action)] = total_return[(state,action)] + R  # Q테이블에 reward 값 저장 (prediction은 total_return[state]에 저장.)
        N[(state,action)] += 1
        Q[(state,action)] = total_return[(state,action)] / N[(state,action)]  # Q테이블 완성

    # print("policy:", Q, i,"번쨰 for문" )  # 출력 -> policy: defaultdict(<class 'float'>, {((19, 6, False), 0): 0.0, ((20, 9, False), 0): 0.9565217391304348, ((20, 9, False), 1): -1.0, ((19, 8, False), 0): 0.75, ((17, 10, False), 1): -0.7222222222222222, ((16, 10, True), 0): 0.0, ((20, 6, False), 0): 0.7058823529411765, ((20, 6, False), 1): -0.2, ((16, 7, True), 0): 0.0, ((16, 3, False), 1): -0.75, ((19, 3, False), 0): 0.3333333333333333, ((20, 1, False), 1): -0.5, ((5, 10, False), 0): -0.42857142857142855, ((5, 10, False), 1): -1.0, ((21, 10, True), 0): 0.8421052631578947, ((16, 3, False), 0): 0.2, ((19, 10, False), 0): 0.038461538461538464, ((19, 10, False), 1): -1.0, ((16, 8, True), 0): 0.0, ((17, 10, False), 0): -0.5952380952380952, ((20, 10, False), 0): 0.47560975609756095, ((20, 10, False), 1): -1.0, ((15, 10, False), 1): -0.4722222222222222, ((14, 4, False), 0): 0.2727272727272727, ((14, 4, False), 1): -0.6, ((18, 1, False), 0): -0.23076923076923078, ((18, 1, False), 1): -1.0, ((21, 5, False), 0): 0.42857142857142855, ((21, 5, False), 1): -1.0, ((16, 5, False), 1): -0.3333333333333333, ((14, 6, False), 0): -0.3333333333333333, ((13, 2, True), 0): 0.3333333333333333, ((13, 2, True), 1): 0.0, ((14, 10, False), 0): -0.45098039215686275, ((17, 1, False), 0): -0.5, ((17, 1, False), 1): -1.0, ((11, 10, False), 1): -0.4166666666666667, ((18, 10, False), 1): -0.7142857142857143, ((13, 9, False), 0): -0.38461538461538464, ((13, 9, False), 1): -1.0, ((19, 6, False), 1): -1.0, ((18, 4, False), 0): 0.25, ((18, 4, False), 1): -1.0, ((15, 3, False), 0): -0.09090909090909091, ((15, 3, False), 1): -1.0, ((8, 3, False), 1): -1.0, ((14, 8, False), 1): -0.6, ((12, 10, False), 0): -0.65, ((12, 10, False), 1): -0.4594594594594595, ((11, 7, False), 0): -0.3333333333333333, ((11, 7, False), 1): -1.0, ((12, 2, False), 0): -0.5555555555555556, ((12, 2, False), 1): -0.42857142857142855, ((17, 6, True), 0): -1.0, ((17, 6, True), 1): 0.0, ((6, 10, False), 0): -0.2727272727272727, ((20, 4, True), 0): 1.0, ((20, 4, True), 1): 0.0, ((15, 2, False), 1): -0.2, ((16, 7, False), 0): -0.5, ((21, 1, True), 0): 1.0, ((21, 1, True), 1): -1.0, ((18, 5, False), 0): 0.2, ((18, 5, False), 1): -1.0, ((18, 9, False), 0): -0.3333333333333333, ((13, 10, False), 0): -0.4782608695652174, ((13, 10, False), 1): -0.5416666666666666, ((18, 2, False), 1): -0.3333333333333333, ((17, 2, False), 0): -0.25, ((17, 2, False), 1): -1.0, ((14, 10, False), 1): -0.7058823529411765, ((19, 7, True), 0): 0.5, ((6, 10, False), 1): -1.0, ((11, 10, False), 0): -0.5238095238095238, ((16, 3, True), 0): 0.3333333333333333, ((16, 3, True), 1): -1.0, ((9, 10, False), 0): -0.5238095238095238, ((9, 10, False), 1): -0.5, ((5, 4, False), 0): -0.3333333333333333, ((5, 4, False), 1): -1.0, ((17, 7, False), 0): -0.1, ((17, 7, False), 1): -1.0, ((15, 7, False), 1): -1.0, ((16, 10, False), 0): -0.25, ((16, 10, False), 1): -0.7368421052631579, ((19, 10, True), 0): -0.1111111111111111, ((21, 8, False), 0): 1.0, ((21, 8, False), 1): -1.0, ((17, 8, False), 1): -0.5, ((20, 3, False), 0): 0.5454545454545454, ((20, 3, False), 1): -1.0, ((13, 4, False), 0): 0.0, ((13, 4, False), 1): -1.0, ((20, 8, False), 0): 0.6111111111111112, ((20, 8, False), 1): -1.0, ((15, 8, False), 1): -0.6666666666666666, ((18, 8, False), 1): -0.09090909090909091, ((15, 1, False), 0): -0.42857142857142855, ((10, 10, False), 0): -0.2, ((10, 10, False), 1): -0.047619047619047616, ((19, 2, False), 1): -1.0, ((15, 8, False), 0): -0.5, ((11, 5, False), 0): 0.0, ((11, 5, False), 1): 0.2, ((14, 1, True), 0): -1.0, ((14, 1, True), 1): -1.0, ((12, 8, False), 0): -1.0, ((12, 8, False), 1): -0.5833333333333334, ((14, 8, False), 0): -0.3333333333333333, ((18, 10, False), 0): -0.1282051282051282, ((21, 6, True), 0): 1.0, ((21, 6, True), 1): 1.0, ((7, 7, False), 1): -0.5, ((18, 6, False), 0): 0.6363636363636364, ((18, 6, False), 1): -0.6666666666666666, ((10, 4, False), 0): 1.0, ((10, 4, False), 1): 0.0, ((14, 6, False), 1): -0.6666666666666666, ((20, 5, False), 0): 0.8571428571428571, ((20, 5, False), 1): -1.0, ((21, 10, True), 1): -0.4, ((14, 2, False), 0): 0.0, ((14, 2, False), 1): 0.14285714285714285, ((13, 2, False), 1): 0.2, ((8, 10, False), 0): -0.5555555555555556, ((8, 10, False), 1): -0.35714285714285715, ((13, 4, True), 0): -1.0, ((18, 3, False), 0): -0.4, ((18, 3, False), 1): 0.0, ((13, 7, True), 0): -1.0, ((14, 10, True), 0): -0.3333333333333333, ((14, 10, True), 1): -1.0, ((14, 3, False), 0): -0.25, ((13, 8, False), 0): -1.0, ((12, 7, False), 0): -1.0, ((12, 7, False), 1): -0.6666666666666666, ((12, 6, False), 0): -0.3, ((12, 6, False), 1): -1.0, ((15, 4, False), 0): -0.3684210526315789, ((18, 7, False), 1): -0.5, ((21, 9, True), 0): 1.0, ((21, 9, True), 1): -1.0, ((18, 9, False), 1): -1.0, ((16, 2, False), 0): 0.2727272727272727, ((16, 2, False), 1): -1.0, ((14, 3, False), 1): -0.23076923076923078, ((16, 1, True), 0): -1.0, ((16, 1, True), 1): -0.3333333333333333, ((21, 3, False), 1): -1.0, ((20, 10, True), 1): -0.14285714285714285, ((7, 10, False), 1): -0.4166666666666667, ((16, 8, False), 1): -0.7777777777777778, ((5, 9, False), 1): -1.0, ((10, 9, False), 1): -1.0, ((12, 4, False), 1): -0.3333333333333333, ((15, 5, False), 0): -0.16666666666666666, ((15, 5, False), 1): -0.25, ((7, 3, False), 1): -1.0, ((20, 4, False), 1): -1.0, ((15, 7, False), 0): -0.8333333333333334, ((21, 3, True), 0): 1.0, ((19, 7, True), 1): 0.0, ((19, 2, False), 0): 0.875, ((17, 2, True), 0): 0.5, ((17, 2, True), 1): 0.0, ((15, 10, False), 0): -0.4482758620689655, ((12, 4, False), 0): -0.6363636363636364, ((13, 7, False), 0): -0.42857142857142855, ((16, 1, False), 0): -1.0, ((14, 5, False), 1): -0.4, ((12, 1, False), 0): -0.8, ((12, 1, False), 1): -1.0, ((9, 1, False), 1): -1.0, ((15, 9, False), 1): -1.0, ((21, 6, False), 0): 1.0, ((21, 6, False), 1): 0.0, ((21, 8, True), 0): 1.0, ((7, 10, False), 0): -0.3333333333333333, ((19, 8, False), 1): -0.625, ((19, 5, False), 0): 0.45454545454545453, ((7, 4, False), 0): 0.5, ((7, 4, False), 1): 0.0, ((15, 6, False), 0): 0.16666666666666666, ((13, 5, False), 0): -0.2, ((13, 5, False), 1): -1.0, ((13, 7, False), 1): -1.0, ((19, 5, True), 0): 0.8, ((19, 5, True), 1): 1.0, ((15, 10, True), 0): -1.0, ((15, 10, True), 1): -0.375, ((13, 6, False), 1): -0.3333333333333333, ((9, 2, False), 0): 0.5, ((9, 2, False), 1): -1.0, ((16, 1, False), 1): -0.6, ((15, 4, False), 1): -0.7142857142857143, ((14, 7, True), 0): -1.0, ((11, 6, False), 0): 0.6, ((11, 6, False), 1): 0.0, ((19, 3, True), 1): -1.0, ((12, 3, False), 0): -0.6666666666666666, ((10, 5, False), 0): 0.0, ((10, 5, False), 1): 1.0, ((20, 7, False), 0): 0.8125, ((20, 7, False), 1): -1.0, ((21, 10, False), 1): -1.0, ((15, 9, False), 0): -0.3333333333333333, ((11, 1, False), 0): -0.2, ((11, 1, False), 1): 0.0, ((16, 5, False), 0): 0.125, ((13, 5, True), 0): -1.0, ((13, 5, True), 1): 1.0, ((17, 10, True), 1): -0.6666666666666666, ((15, 2, False), 0): 0.4666666666666667, ((16, 8, False), 0): -0.6, ((11, 4, False), 0): -1.0, ((11, 4, False), 1): 0.0, ((19, 9, False), 1): -1.0, ((11, 8, False), 0): -0.3333333333333333, ((11, 8, False), 1): 0.3333333333333333, ((8, 8, False), 0): -1.0, ((8, 8, False), 1): -0.6, ((13, 8, False), 1): 0.0, ((16, 6, True), 1): -1.0, ((19, 3, False), 1): -1.0, ((9, 1, False), 0): -0.7142857142857143, ((18, 8, False), 0): -0.2, ((21, 10, False), 0): 0.9333333333333333, ((6, 3, False), 0): 0.0, ((6, 3, False), 1): -1.0, ((16, 5, True), 0): -1.0, ((12, 8, True), 0): -1.0, ((6, 7, False), 0): 1.0, ((6, 7, False), 1): 0.0, ((10, 7, False), 0): -0.3333333333333333, ((10, 7, False), 1): -1.0, ((8, 5, False), 1): 0.5, ((19, 4, True), 1): -1.0, ((19, 4, False), 1): -1.0, ((7, 7, False), 0): -1.0, ((18, 10, True), 0): -0.375, ((18, 10, True), 1): 0.0, ((14, 7, False), 0): -0.6, ((14, 7, False), 1): -0.3333333333333333, ((9, 5, False), 0): -1.0, ((9, 4, False), 0): -1.0, ((17, 9, False), 1): -0.6666666666666666, ((10, 6, False), 0): -0.6666666666666666, ((10, 6, False), 1): -1.0, ((20, 2, False), 0): 0.7083333333333334, ((20, 2, False), 1): -0.5, ((17, 4, False), 0): 0.14285714285714285, ((17, 4, False), 1): -1.0, ((20, 7, True), 0): 1.0, ((20, 7, True), 1): 0.0, ((20, 1, False), 0): 0.4375, ((15, 1, False), 1): -0.5, ((19, 7, False), 1): -1.0, ((8, 4, False), 0): -0.2, ((16, 9, True), 1): -1.0, ((16, 9, False), 0): -1.0, ((5, 5, False), 0): 0.0, ((19, 9, False), 0): -0.1111111111111111, ((14, 1, False), 0): -0.8181818181818182, ((14, 1, False), 1): -1.0, ((13, 10, True), 0): 0.0, ((13, 10, True), 1): -1.0, ((6, 9, False), 0): -1.0, ((6, 9, False), 1): -1.0, ((16, 5, True), 1): 0.0, ((14, 2, True), 0): -1.0, ((11, 9, False), 0): -1.0, ((9, 8, False), 1): 0.0, ((15, 6, False), 1): -1.0, ((11, 2, False), 0): 0.0, ((11, 2, False), 1): 0.0, ((17, 10, True), 0): -1.0, ((9, 3, False), 0): -0.14285714285714285, ((19, 5, False), 1): 0.0, ((12, 9, False), 1): -0.375, ((6, 1, False), 0): -1.0, ((6, 1, False), 1): -0.3333333333333333, ((12, 7, True), 0): 0.0, ((16, 6, False), 1): -1.0, ((20, 4, False), 0): 0.4090909090909091, ((13, 6, False), 0): 0.2, ((14, 8, True), 0): 0.0, ((20, 10, True), 0): 1.0, ((10, 8, False), 0): -0.14285714285714285, ((14, 2, True), 1): 1.0, ((21, 2, True), 1): 0.3333333333333333, ((14, 9, False), 0): -1.0, ((14, 9, False), 1): -0.3333333333333333, ((21, 2, False), 0): 0.8181818181818182, ((20, 5, True), 0): 1.0, ((20, 5, True), 1): 0.0, ((11, 3, False), 0): -0.6, ((11, 3, False), 1): -1.0, ((6, 4, False), 0): -1.0, ((6, 4, False), 1): 0.3333333333333333, ((12, 10, True), 0): -0.5, ((12, 10, True), 1): -1.0, ((13, 2, False), 0): -0.5555555555555556, ((8, 5, False), 0): -0.3333333333333333, ((9, 3, False), 1): -1.0, ((19, 4, True), 0): 1.0, ((9, 4, False), 1): -0.5, ((19, 4, False), 0): 0.6363636363636364, ((19, 9, True), 0): 1.0, ((15, 3, True), 0): -1.0, ((15, 3, True), 1): 0.0, ((9, 8, False), 0): 0.0, ((14, 5, False), 0): -0.3333333333333333, ((13, 7, True), 1): -1.0, ((20, 3, True), 0): 1.0, ((21, 2, False), 1): -1.0, ((17, 9, False), 0): -0.25, ((12, 3, False), 1): -1.0, ((13, 6, True), 0): 0.0, ((13, 1, False), 0): -0.6, ((13, 1, False), 1): -0.6666666666666666, ((12, 5, False), 0): -0.16666666666666666, ((21, 5, True), 0): 1.0, ((21, 5, True), 1): -0.75, ((18, 2, False), 0): -0.1111111111111111, ((15, 2, True), 1): 0.0, ((18, 2, True), 1): -1.0, ((7, 8, False), 0): -1.0, ((7, 8, False), 1): -1.0, ((16, 7, False), 1): 0.0, ((18, 7, False), 0): 0.5, ((10, 8, False), 1): -1.0, ((19, 8, True), 0): 1.0, ((19, 8, True), 1): 0.0, ((17, 7, True), 0): 0.1111111111111111, ((17, 7, True), 1): -1.0, ((10, 2, False), 0): -1.0, ((10, 2, False), 1): 0.5, ((17, 5, True), 0): -1.0, ((7, 9, False), 0): -1.0, ((16, 10, True), 1): 0.42857142857142855, ((7, 3, False), 0): -1.0, ((20, 6, True), 0): 0.6666666666666666, ((20, 6, True), 1): 0.0, ((19, 6, True), 1): 0.5, ((12, 9, False), 0): -0.25, ((17, 3, False), 0): 0.2857142857142857, ((17, 3, False), 1): 0.0, ((9, 9, False), 1): -1.0, ((17, 8, False), 0): -0.4444444444444444, ((7, 2, False), 0): 0.0, ((7, 2, False), 1): -1.0, ((13, 3, False), 0): -0.2, ((13, 3, False), 1): -1.0, ((19, 3, True), 0): 0.5, ((9, 6, False), 0): -1.0, ((9, 6, False), 1): 0.5, ((12, 5, False), 1): -1.0, ((15, 2, True), 0): 1.0, ((15, 9, True), 0): -1.0, ((15, 9, True), 1): 0.0, ((9, 5, False), 1): -0.2, ((10, 9, False), 0): -1.0, ((20, 9, True), 0): 1.0, ((20, 9, True), 1): 1.0, ((14, 9, True), 1): 0.3333333333333333, ((21, 1, False), 1): -1.0, ((19, 10, True), 1): -1.0, ((17, 6, False), 1): -1.0, ((18, 5, True), 0): 1.0, ((18, 5, True), 1): 0.0, ((21, 3, True), 1): -0.3333333333333333, ((21, 7, True), 0): 1.0, ((17, 6, False), 0): -0.6666666666666666, ((15, 8, True), 0): -1.0, ((15, 8, True), 1): 0.0, ((21, 4, True), 0): 1.0, ((21, 4, True), 1): -1.0, ((6, 6, False), 0): -1.0, ((6, 6, False), 1): -1.0, ((11, 9, False), 1): -0.2857142857142857, ((21, 9, False), 1): -1.0, ((19, 1, False), 0): 0.4, ((19, 1, False), 1): -1.0, ((18, 3, True), 0): 1.0, ((18, 3, True), 1): -1.0, ((14, 9, True), 0): 0.0, ((17, 9, True), 0): -1.0, ((16, 4, False), 0): 0.2, ((21, 7, False), 0): 1.0, ((21, 7, False), 1): -1.0, ((18, 1, True), 0): -1.0, ((18, 1, True), 1): 0.0, ((16, 9, True), 0): -1.0, ((13, 9, True), 1): -1.0, ((21, 8, True), 1): -1.0, ((21, 7, True), 1): 0.0, ((18, 7, True), 1): 0.2, ((8, 2, False), 0): 0.0, ((8, 2, False), 1): 0.0, ((5, 3, False), 0): -1.0, ((5, 3, False), 1): -1.0, ((16, 4, False), 1): -1.0, ((9, 7, False), 1): 0.0, ((19, 7, False), 0): 0.375, ((21, 2, True), 0): 1.0, ((18, 8, True), 0): -1.0, ((7, 5, False), 0): -0.5, ((16, 6, False), 0): 0.0, ((21, 3, False), 0): 1.0, ((17, 3, True), 1): 0.0, ((13, 3, True), 0): 1.0, ((13, 3, True), 1): 0.0, ((9, 9, False), 0): -0.2, ((5, 7, False), 1): -1.0, ((8, 6, False), 0): -0.5, ((8, 6, False), 1): -1.0, ((17, 4, True), 0): 0.0, ((17, 4, True), 1): 0.0, ((8, 7, False), 0): -0.3333333333333333, ((8, 7, False), 1): -0.3333333333333333, ((10, 3, False), 0): 0.0, ((10, 3, False), 1): 0.0, ((21, 9, False), 0): 0.8333333333333334, ((10, 1, False), 1): 0.0, ((6, 5, False), 0): 0.0, ((6, 5, False), 1): -1.0, ((5, 9, False), 0): -1.0, ((20, 1, True), 1): -1.0, ((18, 7, True), 0): 0.0, ((7, 1, False), 0): -1.0, ((17, 3, True), 0): 0.0, ((18, 4, True), 0): 0.3333333333333333, ((19, 2, True), 1): -1.0, ((8, 1, False), 0): 0.0, ((8, 9, False), 0): -1.0, ((8, 9, False), 1): 0.0, ((18, 4, True), 1): 0.0, ((13, 1, True), 0): 1.0, ((5, 2, False), 0): -1.0, ((5, 2, False), 1): 0.0, ((18, 9, True), 0): 1.0, ((18, 9, True), 1): 0.0, ((7, 5, False), 1): -0.2, ((13, 6, True), 1): -1.0, ((14, 6, True), 0): -1.0, ((14, 6, True), 1): -1.0, ((12, 6, True), 0): 1.0, ((12, 6, True), 1): 0.0, ((7, 6, False), 1): 0.0, ((20, 2, True), 0): 0.5, ((20, 2, True), 1): 1.0, ((5, 1, False), 0): -1.0, ((16, 9, False), 1): 1.0, ((8, 1, False), 1): -1.0, ((19, 1, True), 1): -1.0, ((4, 10, False), 0): -1.0, ((14, 4, True), 0): 0.3333333333333333, ((14, 4, True), 1): 1.0, ((14, 3, True), 1): -1.0, ((21, 1, False), 0): 1.0, ((12, 9, True), 0): -1.0, ((12, 9, True), 1): 0.0, ((15, 1, True), 1): -0.3333333333333333, ((17, 1, True), 1): -1.0, ((17, 1, True), 0): -1.0, ((8, 4, False), 1): -1.0, ((8, 3, False), 0): -1.0, ((5, 6, False), 1): -1.0, ((7, 6, False), 0): 1.0, ((15, 6, True), 0): 0.0, ((15, 6, True), 1): 0.0, ((14, 7, True), 1): -0.3333333333333333, ((15, 7, True), 1): 0.0, ((5, 6, False), 0): -1.0, ((17, 5, True), 1): 1.0, ((5, 8, False), 1): 1.0, ((17, 5, False), 0): -1.0, ((17, 5, False), 1): -0.5, ((6, 2, False), 1): 1.0, ((6, 8, False), 0): 0.0, ((6, 8, False), 1): -1.0, ((16, 4, True), 0): -1.0, ((16, 4, True), 1): -1.0, ((14, 5, True), 0): -1.0, ((12, 2, True), 0): -1.0, ((19, 9, True), 1): -1.0, ((9, 7, False), 0): 1.0, ((10, 1, False), 0): -1.0, ((4, 8, False), 0): -1.0, ((4, 8, False), 1): -1.0, ((14, 3, True), 0): 1.0, ((21, 4, False), 0): 1.0, ((21, 4, False), 1): 0.0, ((15, 7, True), 0): 0.0, ((14, 8, True), 1): 0.0, ((6, 2, False), 0): 0.0, ((4, 10, False), 1): -1.0, ((19, 1, True), 0): 1.0, ((15, 5, True), 0): -1.0, ((15, 5, True), 1): 0.0, ((19, 6, True), 0): 0.0, ((4, 9, False), 0): -1.0, ((17, 8, True), 0): -1.0, ((17, 8, True), 1): 0.0, ((18, 6, True), 1): -1.0, ((15, 1, True), 0): -1.0, ((16, 7, True), 1): 0.0, ((16, 2, True), 1): -1.0, ((5, 7, False), 0): -1.0, ((19, 2, True), 0): -1.0, ((5, 5, False), 1): 0.0, ((18, 8, True), 1): 1.0, ((13, 8, True), 1): 1.0, ((5, 1, False), 1): -1.0, ((18, 2, True), 0): -1.0}) 2262 번쨰 for문


evaluate_policy(None)  # Random Policy로 게임해보기 (스코어 평가)
evaluate_policy(Q)     # 추출한 Policy로 게임해보기 (스코어 평가)

print("Optimal Policy:", Q)

#df = pd.DataFrame(Q.items(), columns=['state_action_pair', 'value'])
#print(df.head(11))
